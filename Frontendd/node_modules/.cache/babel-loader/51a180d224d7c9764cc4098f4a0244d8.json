{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashis\\\\Desktop\\\\Ecommerce\\\\Frontendd\\\\src\\\\user\\\\Signin.js\";\nimport React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { signin, authenticate, isAuthenticated } from \"./auth/helper\";\nconst [values, SetValues] = useState({\n  email: \"\",\n  password: \"\",\n  error: \"\",\n  loading: false,\n  didRedirect: false\n});\nconst {\n  email,\n  password,\n  error,\n  loading,\n  didRedirect\n} = values;\nconst {\n  user\n} = isAuthenticated();\n\nconst handleChange = name => event => {\n  setValues({ ...values,\n    error: false,\n    [name]: event.target.value\n  });\n};\n\nconst loadingMessage = () => {\n  return loading && React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"loading.........\"));\n};\n\nconst errorMessage = () => {\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6 offset-sm-3 text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? \"\" : \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, error)));\n};\n\nconst onSubmit = event => {\n  event.preventDefault();\n  setValues({ ...values,\n    error: false,\n    loading: true\n  });\n  signin({\n    email,\n    password\n  }).then(data => {\n    if (data.err) {\n      setValues({ ...values,\n        error: data.err,\n        loading: true\n      });\n    } else {\n      authenticate(data, () => {\n        setValues({ ...values,\n          didRedirect: true\n        });\n      });\n    }\n  }).catch(console.log(\"signin request failed!!\"));\n};\n\nconst performRedirect = () => {\n  if (didRedirect) {\n    if (user && user.role === 1) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Redirect TO ADMIN\");\n    } else {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" Redirect to user dashboard\");\n    }\n  }\n\n  if (isAuthenticated()) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    });\n  }\n};\n\nconst Signin = () => {\n  const signInForm = () => {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 offset-sm-3 text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"email\",\n      value: email,\n      onChange: handleChange(\"email\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"password\",\n      onChange: handleChange(\"password\"),\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-success btn-block\",\n      onClick: onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Submit\"))));\n  };\n\n  return React.createElement(Base, {\n    title: \"Sign In page\",\n    description: \"A page for user to sign in!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, loadingMessage(), errorMessage(), signInForm(), didRedirect(), React.createElement(\"p\", {\n    className: \"text-white text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, JSON.stringify(values)));\n};\n\nexport default Signin;","map":{"version":3,"sources":["C:/Users/ashis/Desktop/Ecommerce/Frontendd/src/user/Signin.js"],"names":["React","useState","Base","Link","Redirect","signin","authenticate","isAuthenticated","values","SetValues","email","password","error","loading","didRedirect","user","handleChange","name","event","setValues","target","value","loadingMessage","errorMessage","display","onSubmit","preventDefault","then","data","err","catch","console","log","performRedirect","role","Signin","signInForm","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport {signin, authenticate, isAuthenticated} from \"./auth/helper\"\n\nconst [values,SetValues] = useState({\n  email:\"\",\n  password:\"\",\n  error:\"\",\n  loading:false,\n  didRedirect:false\n})\n\nconst {email,password,error,loading,didRedirect} = values\nconst {user} = isAuthenticated()\n\nconst handleChange = name => event => {\n  setValues({ ...values, error: false, [name]: event.target.value });\n};\n\n\nconst loadingMessage = () => {\n  return (\n   loading && (\n     <div className=\"alert alert-info\">\n       <h2>loading.........</h2>\n     </div>\n   )\n  );\n};\n\nconst errorMessage = () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-6 offset-sm-3 text-left\">\n        <div\n          className=\"alert alert-danger\"\n          style={{ display: error ? \"\" : \"none\" }}\n        >\n          {error}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst onSubmit =event=> {\n  event.preventDefault()\n  setValues({...values,error:false,loading:true})\n  signin({email,password})\n  .then(data => {\n    if(data.err){\n      setValues({...values,error:data.err,loading:true})\n    }\n    else{\n      authenticate(data,() => {\n        setValues({\n          ...values,\n          didRedirect:true\n        })\n      })\n    }\n  })\n  .catch(console.log(\"signin request failed!!\"))\n\n}\n\nconst performRedirect =() => {\n  if(didRedirect){\n    if(user && user.role === 1){\n        return <p>Redirect TO ADMIN</p>\n    } else {\n      return <p> Redirect to user dashboard</p>\n    }\n  }\n  if(isAuthenticated()){\n    return <Redirect to=\"/\" />\n  }\n}\n\nconst Signin = () => {\n  const signInForm = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <form>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Email</label>\n              <input className=\"form-control\" type=\"email\" value={email} onChange={handleChange(\"email\")}/>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"text-light\">Password</label>\n              <input className=\"form-control\" type=\"password\"  onChange={handleChange(\"password\")} value={password}/>\n            </div>\n            <button className=\"btn btn-success btn-block\" onClick={onSubmit}>Submit</button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign In page\" description=\"A page for user to sign in!\">\n      {loadingMessage()}\n      {errorMessage()}\n      {signInForm()}\n      {didRedirect()}\n      <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\n    </Base>\n  );\n};\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashis\\\\Desktop\\\\Ecommerce\\\\Frontendd\\\\src\\\\user\\\\Signin.js\";\nimport React, { useState, setValues } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { signin, authenticate, isAuthenticated } from \"../auth/helper\";\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    loading: false,\n    didRedirect: false\n  });\n  const {\n    email,\n    password,\n    error,\n    loading,\n    didRedirect\n  } = values;\n  const {\n    user\n  } = isAuthenticated();\n\n  const handleChange = name => event => {\n    setValues({ ...values,\n      error: false,\n      [name]: event.target.value\n    });\n  }; // const loadingMessage = () => {\n  //   return (\n  //    loading && (\n  //      <div className=\"alert alert-info\">\n  //        <h2>loading.........</h2>\n  //      </div>\n  //    )\n  //   );\n  // };\n\n\n  const errorMessage = () => {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 offset-sm-3 text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, error)));\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      error: false,\n      loading: true\n    });\n    signin({\n      email,\n      password\n    }).then(data => {\n      if (data.err) {\n        setValues({ ...values,\n          error: data.err,\n          loading: false\n        });\n      } else {\n        authenticate(data, () => {\n          setValues({ ...values,\n            didRedirect: true\n          });\n        });\n      }\n    }).catch(console.log(\"signin request failed!!\"));\n  };\n\n  const performRedirect = () => {\n    if (didRedirect) {\n      if (user && user.role === 1) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Redirect TO ADMIN\");\n      } else {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \" Redirect to user dashboard\");\n      }\n    }\n\n    if (isAuthenticated()) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    }\n  };\n\n  const signInForm = () => {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 offset-sm-3 text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"email\",\n      value: email,\n      onChange: handleChange(\"email\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"password\",\n      onChange: handleChange(\"password\"),\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-success btn-block\",\n      onClick: onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Submit\"))));\n  };\n\n  return React.createElement(Base, {\n    title: \"Sign In page\",\n    description: \"A page for user to sign in!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, errorMessage(), signInForm(), performRedirect(), React.createElement(\"p\", {\n    className: \"text-white text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, JSON.stringify(values)));\n};\n\nexport default Signin;","map":{"version":3,"sources":["C:/Users/ashis/Desktop/Ecommerce/Frontendd/src/user/Signin.js"],"names":["React","useState","setValues","Base","Link","Redirect","signin","authenticate","isAuthenticated","Signin","values","email","password","error","loading","didRedirect","user","handleChange","name","event","target","value","errorMessage","display","onSubmit","preventDefault","then","data","err","catch","console","log","performRedirect","role","signInForm","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState,setValues } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport {signin, authenticate, isAuthenticated} from \"../auth/helper\"\n\n\n\nconst Signin = () => {\nconst [values,setValues] = useState({\n  email:\"\",\n  password:\"\",\n  error:\"\",\n  loading:false,\n  didRedirect:false\n})\n\nconst {email,password,error,loading,didRedirect} = values\nconst {user} = isAuthenticated()\n\nconst handleChange = name => event => {\n  setValues({ ...values, error: false, [name]: event.target.value });\n};\n\n\n// const loadingMessage = () => {\n//   return (\n//    loading && (\n//      <div className=\"alert alert-info\">\n//        <h2>loading.........</h2>\n//      </div>\n//    )\n//   );\n// };\n\nconst errorMessage = () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-6 offset-sm-3 text-left\">\n        <div\n          className=\"alert alert-danger\"\n          style={{ display: error ? \"\" : \"none\" }}\n        >\n          {error}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst onSubmit =event=> {\n  event.preventDefault()\n  setValues({...values,error:false,loading:true})\n  signin({email,password})\n  .then(data => {\n    if(data.err){\n      setValues({...values,error:data.err,loading:false})\n    }\n    else{\n      authenticate(data,() => {\n        setValues({\n          ...values,\n          didRedirect:true\n        })\n      })\n    }\n  })\n  .catch(console.log(\"signin request failed!!\"))\n\n}\n\nconst performRedirect =() => {\n  if(didRedirect){\n    if(user && user.role === 1){\n        return <p>Redirect TO ADMIN</p>\n    } else {\n      return <p> Redirect to user dashboard</p>\n    }\n  }\n  if(isAuthenticated()){\n    return <Redirect to=\"/\" />\n  }\n}\n\n\n  const signInForm = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <form>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Email</label>\n              <input className=\"form-control\" type=\"email\" value={email} onChange={handleChange(\"email\")}/>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"text-light\">Password</label>\n              <input className=\"form-control\" type=\"password\"  onChange={handleChange(\"password\")} value={password}/>\n            </div>\n            <button className=\"btn btn-success btn-block\" onClick={onSubmit}>Submit</button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign In page\" description=\"A page for user to sign in!\">\n      {/* {loadingMessage()} */}\n      {errorMessage()}\n      {signInForm()}\n      {performRedirect()}\n      <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\n    </Base>\n  );\n};\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}